# Default values for keycloak.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# workload
statefulset:
  enabled: true
  replicaCount: 1
  autoscaling: # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    #targetMemoryUtilizationPercentage: 80
  image:
    repository: quay.io/keycloak/keycloak
    tag: 26.3.2-1
    pullPolicy: IfNotPresent
    pullSecrets: []
  args: ["start-dev"]
  # see https://www.keycloak.org/server/all-config
  env:
    # tls edge termination
    - name: KC_HTTP_ENABLED
      value: "true"
    - name: KC_PROXY_HEADERS
      value: "xforwarded"
    # enable health endpoint
    - name: KC_HEALTH_ENABLED
      value: "true"
    # enable metrics endpoint
    - name: KC_METRICS_ENABLED
      value: "true"
  # Additional environment variables for Keycloak
  extraEnv: []
    # - name: KC_HOSTNAME
    #   value: "http://keycloak.local"
    # - name: KC_HOSTNAME_ADMIN
    #   value: "http://keycloak-admin.local"
    # - name: KC_HOSTNAME_BACKCHANNEL_DYNAMIC
    #   value: "true"
    # - name: KC_BOOTSTRAP_ADMIN_USERNAME
    #   value: admin
    # - name: KC_BOOTSTRAP_ADMIN_PASSWORD
    #   value: admin
    # - name: KC_DB
    #   value: postgres
    # - name: KC_DB_URL
    #   value: "<DBURL>"
    # - name: KC_DB_USERNAME
    #   value: "<DBUSERNAME>"
    # - name: KC_DB_PASSWORD
    #   value: "<DBPASSWORD>"
  # Environment from configMap/secret
  envFrom: []
  extraEnvFrom: []
  # startup, liveness and readiness probes, see https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  startupProbe:
    httpGet:
      path: /health/ready
      port: 9000
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 60
    timeoutSeconds: 1
  livenessProbe:
    httpGet:
      path: /health/live
      port: 9000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
  readinessProbe:
    httpGet:
      path: /health/ready
      port: 9000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
  resources: {}

# management service
managementService:
  name: management
  type: ClusterIP
  ports:
  - name: management
    port: 9000
    targetPort: 9000
    protocol: TCP

# keycloak public service
service:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: keycloak.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

adminIngress:
  enabled: false
  name: "admin"
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: keycloak-admin.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
